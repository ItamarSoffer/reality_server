swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger ReST Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /login:
    get:
      operationId: story_server.api.users_functions.login
      tags:
        - Timeline
      summary: check if user can login to system
      description: check user and password
      parameters:
        - name: username
          in: query
          type: string
          description: user name
          required: true
        - name: password
          in: query
          type: string
          description: password for system
          required: true
      responses:
        200:
          description: user Successfully logged in

  /get_all_names:
    post:
      operationId: story_server.api.gets.get_all_timelines
      tags:
        - Timeline
      summary: get all the data for the cards
      description: get name, url, id, creator and create time.
      parameters:
        - name: num
          in: query
          type: integer
          description: amount of timelines to return
          required: false
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'

      responses:
        200:
          description: fetched all timelines data.
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                id:
                  type: string
                url:
                  type: string
                create_time:
                  type: string
                create_user:
                  type: string

  /get_timelines_by_user:
    post:
      operationId: story_server.api.gets.get_timelines_by_user
      tags:
        - Timeline
        - By User
      summary: timeslines by user permissions
      description: gets all the timelines a user has permissions to.
      parameters:
        - name: username
          in: query
          type: string
          description: username to get data to
          required: true
        - name: num
          in: query
          type: integer
          description: amount of timelines to return.
          required: false
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Successfully read people list operation

  /create_timeline:
    post:
      operationId: story_server.api.posts.create_timeline
      tags:
        - Timeline
      summary: creates a new timeline and addss it to db
      description: creates the new timeline
      parameters:
        - name: new_timeline
          in: body
          description: timeline to create
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                name:
                  type: string
                  description: the name of the timeline
                url:
                  type: string
                  description: the url for the timeline
                create_user:
                  type: string
                  description: the user who created the timeline
                timeline_description:
                  type: string
                  description: timeline description

      responses:
        200:
          description: Successfully created new timeline

  /timeline/{timeline_url}:
    post:
      operationId: story_server.api.gets.get_timeline
      tags:
        - Timeline
      summary: get all timeline events
      description: get all the timeline events by the url
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Successfully read timeline events from db.
          schema:
            properties:
              events:
                type: array

  /timeline/{timeline_url}/add:
    post:
      operationId: story_server.api.posts.add_event
      tags:
        - Timeline
      summary: Add new event to timeline
      description: adds the new event to timeline
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: new_event
          in: body
          description: new_event to create
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                header:
                  type: string
                  description: main header of event.
                text:
                  type: string
                  description: event text.
                date:
                  type: string
                  description: the date the event accured.
                hour:
                  type: string
                  description: the hour the event accured.
                user:
                  type: string
                  description: the user who created the timeline.
                link:
                  type: string
                  description: additional link for more data for the event.
                frame_color:
                  type: string
                  description: color for icon and frame
                icon:
                  type: string
                  description: the icon for the timeline
              required:
                - header
                - date
                - text
                - user
              additionalProperties:
                type: string
      responses:
        201:
          description: Successfully created new event

  /timeline/{timeline_url}/get_xlsx:
      post:
        operationId: story_server.api.gets.get_timeline_xlsx_file
        tags:
          - Timeline
        summary: returns timeline data in xlsx table
        description: Queries the db and return xlsx file of the data of the timeline.
        parameters:
          - name: timeline_url
            in: path
            description: the address of the timeline
            type: string
            required: True
          - name: jwt
            in: body
            description: the jwt token.
            required: True
            schema:
              allOf:
                - $ref: '#/definitions/JwtAuth'
        responses:
          200:
            description: returned file successfully.

  /timeline/{timeline_url}/basic_data:
    post:
      operationId: story_server.api.gets.get_timeline_basic_data
      tags:
        - Timeline
      summary: returns timeline base data
      description: returns the basic timeline data, that is inserted in the create page.
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: returned file successfully.

  /timeline/{timeline_url}/check_permissions:
    post:
      operationId: story_server.api.users_functions.check_permissions
      tags:
        - Timeline
        - Permissions
      summary: checks user permissions
      description: returns the user role.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: username
          in: query
          type: string
          description: user name
          required: true
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: User has some permissions.

  /timeline/{timeline_url}/set_permissions/:
    post:
      operationId: story_server.api.users_functions.set_permissions
      tags:
        - Timeline
        - Permissions
      summary: sets permissions for user
      description: tries to set permissions to user, if the send user can preform the action.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: permissions_data
          in: body
          description: permissions_data
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                username:
                  type: string
                  description: user name
                role:
                  type: string
                  description: role
                adding_user:
                  type: string
                  description: the user that sent the action
              required:
                - username
                - role
                - adding_user

      responses:
        200:
          description: permissions were added.

  /timeline/{timeline_url}/permitted_users:
    post:
      operationId: story_server.api.users_functions.permitted_users
      tags:
        - Timeline
        - Permissions
      summary: returns all users permitted per timeline
      description: returns all users permitted per timeline
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Successfully queried all users per story.

  /timeline/del_event:
    post:
      operationId: story_server.api.deletes.delete_event
      tags:
        - Timeline
        - Deletes
      summary: Deletes event
      description: Deletes event if user has permissions
      parameters:
        - name: username
          in: query
          description: username
          type: string
          required: True
        - name: event_id
          in: query
          type: string
          description: event ID
          required: true
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Event has been deleted.

  /timeline/del_timeline:
    post:
      operationId: story_server.api.deletes.delete_timeline
      tags:
        - Timeline
        - Deletes
      summary: Deletes Timeline
      description: Deletes timeline and all its events if user has permissions
      parameters:
        - name: username
          in: query
          description: user name
          type: string
          required: True
        - name: timeline_id
          in: query
          type: string
          description: Timeline ID
          required: true
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Timeline has been deleted.

  /check:
    post:
      operationId: story_server.api.jwt_functions.checker
      tags:
        - Check
      summary: Add new event to timeline
      description: adds the new event to timeline
      parameters:
        - name: new_event
          in: body
          description: new_event to create
          required: True
          schema:
            allOf:
            - type: object
              properties:
                header:
                  type: string
                  description: main header of event.
              additionalProperties:
                type: string
            - $ref: '#/definitions/JwtAuth'
      responses:
        201:
          description: Successfully check

  /jwt_check:
    post:
      operationId: story_server.api.jwt_functions.basic_jwt_check
      tags:
        - JWT
      summary: jwt token validation.
      description: check that the user local JWT token is valid
      parameters:
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Successfully check
        201:
          description: jwt is not valid


definitions:
  JwtAuth:
    type: object
    properties:
      jwt_token:
        type: string
        description: the icon for the timeline




