swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger ReST Article
consumes:
  - application/json
produces:
  - application/json

basePath: /api

# Paths supported by the server application
paths:
  /login:
    post:
      operationId: story_server.api.users_functions.login
      tags:
        - Timeline
      summary: check if user can login to system
      description: check user and password
      parameters:
#        - name: username
#          in: query
#          type: string
#          description: user name
#          required: true
#        - name: password
#          in: query
#          type: string
#          description: password for system
#          required: true
        - name: credentials
          in: body
          description: the username and password.
          required: True
          schema:
            allOf:
            - type: object
              properties:
                username:
                  description: user name
                password:
                  description: password
      responses:
        200:
          description: user Successfully logged in

  /get_all_names:
    post:
      operationId: story_server.api.gets.get_all_timelines
      tags:
        - Timeline
      summary: get all the data for the cards
      description: get name, url, id, creator and create time.
      parameters:
        - name: num
          in: query
          type: integer
          description: amount of timelines to return
          required: false
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                search_string:
                  description: string to search
              additionalProperties:
                type: string

      responses:
        200:
          description: fetched all timelines data.
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                id:
                  type: string
                url:
                  type: string
                create_time:
                  type: string
                create_user:
                  type: string

  /get_timelines_by_user:
    post:
      operationId: story_server.api.gets.get_timelines_by_user
      tags:
        - Timeline
        - By User
      summary: timeslines by user permissions
      description: gets all the timelines a user has permissions to.
      parameters:
        - name: num
          in: query
          type: integer
          description: amount of timelines to return.
          required: false
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                search_string:
                  description: string to search
              additionalProperties:
                type: string
      responses:
        200:
          description: Successfully read people list operation

  /create_timeline:
    post:
      operationId: story_server.api.posts.create_timeline
      tags:
        - Timeline
      summary: creates a new timeline and addss it to db
      description: creates the new timeline
      parameters:
        - name: new_timeline
          in: body
          description: timeline to create
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                name:
                  type: string
                  description: the name of the timeline
                url:
                  type: string
                  description: the url for the timeline
                timeline_description:
                  type: string
                  description: timeline description

      responses:
        200:
          description: Successfully created new timeline

  /timeline/{timeline_url}:
    post:
      operationId: story_server.api.gets.get_timeline
      tags:
        - Timeline
      summary: get all timeline events
      description: get all the timeline events by the url
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                min_time:
                  description: min time to fetch events.
                max_time:
                  description: max time to fetch events
                search_string:
                  description: string to search in events.
                tags:
                  description: string to search in events.
                extra_data:
                  description: if true, will etract data from link
      responses:
        200:
          description: Successfully read timeline events from db.
          schema:
            properties:
              events:
                type: array

  /timeline/{timeline_url}/add:
    post:
      operationId: story_server.api.posts.add_event
      tags:
        - Timeline
      summary: Add new event to timeline
      description: adds the new event to timeline
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: new_event
          in: body
          description: new_event to create
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                header:
                  type: string
                  description: main header of event.
                text:
#                  type: string
                  description: event text.
                date:
#                  type: string
                  description: the date the event accured.
                hour:
#                  type: string
                  description: the hour the event accured.
                link:
#                  type: string
                  description: additional link for more data for the event.
                frame_color:
#                  type: string
                  description: color for icon and frame
                icon:
#                  type: string
                  description: the icon for the timeline
                tags:
                  type: array
                  description: the icon for the timeline
              required:
                - header
                - date
              additionalProperties:
                type: string
      responses:
        200:
          description: Successfully created new event

  /timeline/{timeline_url}/get_xlsx:
      post:
        operationId: story_server.api.gets.get_timeline_xlsx_file
        tags:
          - Timeline
        summary: returns timeline data in xlsx table
        description: Queries the db and return xlsx file of the data of the timeline.
        parameters:
          - name: timeline_url
            in: path
            description: the address of the timeline
            type: string
            required: True
          - name: jwt
            in: body
            description: the jwt token.
            required: True
            schema:
              allOf:
                - $ref: '#/definitions/JwtAuth'
        responses:
          200:
            description: returned file successfully.

  /timeline/{timeline_url}/basic_data:
    post:
      operationId: story_server.api.gets.get_timeline_basic_data
      tags:
        - Timeline
      summary: returns timeline base data
      description: returns the basic timeline data, that is inserted in the create page.
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: returned file successfully.

  /timeline/{timeline_url}/check_permissions:
    post:
      operationId: story_server.api.users_functions.check_permissions
      tags:
        - Timeline
        - Permissions
      summary: checks user permissions
      description: returns the user role.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: User has some permissions.

  /timeline/{timeline_url}/set_permissions/:
    post:
      operationId: story_server.api.users_functions.set_permissions
      tags:
        - Timeline
        - Permissions
      summary: sets permissions for user
      description: tries to set permissions to user, if the send user can preform the action.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: permissions_data
          in: body
          description: permissions_data
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                username:
#                  type: string
                  description: user name
                role:
                  type: string
                  description: role
              required:
                - role

      responses:
        200:
          description: permissions were added.

  /timeline/{timeline_url}/permitted_users:
    post:
      operationId: story_server.api.users_functions.permitted_users
      tags:
        - Timeline
        - Permissions
      summary: returns all users permitted per timeline
      description: returns all users permitted per timeline
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Successfully queried all users per story.

  /timeline/del_event:
    post:
      operationId: story_server.api.deletes.delete_event
      tags:
        - Timeline
        - Deletes
      summary: Deletes event
      description: Deletes event if user has permissions
      parameters:
        - name: event_id
          in: query
          type: string
          description: event ID
          required: true
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Event has been deleted.

  /timeline/del_timeline:
    post:
      operationId: story_server.api.deletes.delete_timeline
      tags:
        - Timeline
        - Deletes
      summary: Deletes Timeline
      description: Deletes timeline and all its events if user has permissions
      parameters:
        - name: timeline_id
          in: query
          type: string
          description: Timeline ID
          required: true
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Timeline has been deleted.

  /timeline/{timeline_url}/add_tag:
    post:
      operationId: story_server.api.posts.add_tag
      tags:
        - Timeline
        - Tags
      summary: Add new tag to timeline
      description: Add new tag to timeline
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: new_tag
          in: body
          description: tag to create
          required: True
          schema:
            allOf:
              - $ref: '#/definitions/JwtAuth'
              - type: object
                properties:
                  tag_name:
                    type: string
                    description: The tag name.
                required:
                  - tag_name
                additionalProperties:
                  type: string
      responses:
        200:
          description: Successfully added new event

  /timeline/{timeline_url}/get_tags:
    post:
      operationId: story_server.api.gets.get_tags_by_timeline
      tags:
        - Timeline
        - Tags
      summary: get all story tags
      description: get all tags per story
      parameters:
        - name: timeline_url
          in: path
          description: the address of the timeline
          type: string
          required: True
        - name: jwt
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: returned timeline tags

  /get_permitted_users:
    post:
      operationId: story_server.api.users_functions.get_story_users
      tags:
        - Timeline
        - Users
      summary: returns all users permitted to story
      description: returns all users permitted to story
      parameters:
        - name: token_data
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Returned all users

  /timeline/{timeline_url}/del_tag:
    post:
      operationId: story_server.api.posts.del_tag
      tags:
        - Timeline
        - Tags
      summary: Del tag
      description: Deletes tag from story and all events.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: tags_data
          in: body
          description: tags data
          required: true
          schema:
            allOf:
            - type: object
              properties:
                tag_id:
                  type: string
                  description: tag id
              required:
                - tag_id
      responses:
        200:
          description: Deleted tag

  /timeline/{timeline_url}/edit_tag:
    post:
      operationId: story_server.api.posts.edit_tag
      tags:
        - Timeline
        - Tags
      summary: edit tag
      description: Edit tag properties.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: tags_data
          in: body
          description: tags data
          required: true
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                tag_id:
                  type: string
                  description: tag id
                new_tag_color:
                  description: tag color
                new_tag_name:
                  description: tag new name
              required:
                - tag_id
      responses:
        200:
          description: modified tag

  /timeline/{timeline_url}/edit_property:
    post:
      operationId: story_server.api.posts.edit_name_description
      tags:
        - Timeline
      summary: edit name or description
      description: modifies the name or description of a story.
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: new_properties
          in: body
          description: name or new description
          required: true
          schema:
            allOf:
              - $ref: '#/definitions/JwtAuth'
              - type: object
                properties:
                  new_name:
                    description: tag id
                  new_description:
                    description: tag color
      responses:
        200:
          description: modified property

  /timeline/{timeline_url}/add_favorite:
    post:
      operationId: story_server.api.favorites.add_favorite
      tags:
        - Favorites
      summary: Adds story to favorites
      description: Adds story to favorites
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: token_data
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Added Story to favorites list

  /timeline/{timeline_url}/del_favorite:
    post:
      operationId: story_server.api.favorites.del_favorite
      tags:
        - Favorites
      summary: Dels story to favorites
      description: Dels story to favorites
      parameters:
        - name: timeline_url
          in: path
          description: timeline url
          type: string
          required: True
        - name: token_data
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Deleted Story from favorites list

  /get_favorites:
    post:
      operationId: story_server.api.favorites.get_favorites
      tags:
        - Favorites
      summary: Favorites list
      description: Returns a user favorites list
      parameters:
        - name: token_data
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
      responses:
        200:
          description: Returned favorites list

  /utils/extact_time:
    post:
      operationId: story_server.api.gets.extract_time
      tags:
        - Timeline
        - Event
      summary: Datetime extractor
      description: Extracts the date and time from link.
      parameters:
        - name: token_data
          in: body
          description: the jwt token.
          required: True
          schema:
            allOf:
            - $ref: '#/definitions/JwtAuth'
            - type: object
              properties:
                link:
                  description: Link to extract time from
      responses:
        200:
          description: Extracted time.

definitions:
  JwtAuth:
    type: object
    properties:
      jwt_token:
        type: string
        description: the icon for the timeline




